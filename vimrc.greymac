filetype plugin indent on
set expandtab ts=2 sw=2 ai
set number
let mapleader=" "
set backspace=indent,eol,start
set relativenumber
set clipboard=unnamed
set autowrite
set autoread

set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins
set omnifunc=syntaxcomplete#Complete

" swapfiles directory
:set directory=~/.vim/.swp//
:set undodir=~/.vim/.undo//
:set backupdir=~/.vim/.backup//

" searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" Fix slow O inserts
set timeout timeoutlen=1000 ttimeoutlen=100

" enter reruns last command
nnoremap <CR> :wa<CR>:!!<CR>

" faster screen redraw
set ttyfast

" ctags
map <Leader>ct :!ctags -R --exclude=.git --exclude=log --exclude=.svn --verbose=yes * <CR>

" remap esc
inoremap jj <Esc>

" remap tabs
nnoremap <Tab> :tabn<CR>

" proper copying
noremap Y "+y

" Vim Plugin Settings start here
"
" vim ale for async linting
" set specific linters
let g:ale_linters = {
      \  'ruby': ['rubocop']
      \}

" only run linters that are specified above (save cpu)
" let g:ale_linters_explicit = 1

" vim-airline
" enable ale integration
let g:airline#extensions#ale#enabled = 1

" vim-go
map <C-l> :cnext<CR>
map <C-h> :cprevious<CR>
nnoremap <leader>a :cclose<CR>
autocmd FileType go nmap <leader>r  <Plug>(go-run)
let g:go_list_type = "quickfix"

" run :GoBuild or :GoTestCompile based on the go file
function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#test#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction

autocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>
autocmd FileType go nmap <Leader>c <Plug>(go-coverage-toggle)
let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']
let g:go_metalinter_autosave = 1
let g:go_metalinter_autosave_enabled = ['vet', 'golint']
let g:go_auto_type_info = 1
let g:go_auto_sameids = 1

"Ag
let g:ackprg = 'ag --nogroup --nocolor --column'

if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor
  "     " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif


" ctrl-p
let g:ctrlp_show_hidden = 1

" vim-test
nmap <silent> <leader>s :TestNearest<CR>
nmap <silent> <leader>t :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

" Open NERDTree with [<leader>d]
map <Leader>d :NERDTreeToggle<CR>

" " Show current file in the NERDTree hierarchy
map <Leader>D :NERDTreeFind<CR>

